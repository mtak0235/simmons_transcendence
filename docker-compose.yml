services:
  nginx:
    depends_on:
      - "api"
    image: nginx:stable-alpine
    container_name: nginx
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    ports:
      - 80:80
  api:
    container_name: api
    depends_on:
      - "redis"
    build:
      context: ./backend/node
      # Only will build development stage from our dockerfile
      target: development
    volumes:
      - ./backend/node/app:/usr/src/app
    #env_file:
    #  - .env
    # Run a command against the development stage of the image
    command: yarn start:dev
    ports:
      - 3001:3001
      - 4000:4000
  front_end:
    build:
      context: ./frontend/node
      # Only will build development stage from our dockerfile
      target: development
    volumes:
      - ./frontend/node/app:/usr/src/app
    #env_file:
    #  - .env
    # Run a command against the development stage of the image
    command: npm start
  redis:
    image: redis:7.0-alpine
    command: redis-server --port 6379
    container_name: redis_boot
    hostname: redis_boot
    labels:
      - "name=redis"
      - "mode=standalone"
    ports:
      - 6379:6379
  db:
    image: postgres:latest
    container_name: postgres
    hostname: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "gilee"
      POSTGRES_PASSWORD: "1234"
    volumes:
      - ./init_db:/docker-entrypoint-initdb.d
      - ./db/data:/var/lib/postgresql/data
